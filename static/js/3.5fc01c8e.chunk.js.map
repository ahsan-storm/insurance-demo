{"version":3,"sources":["../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js"],"names":["module","exports","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","hasOwnProp","a","b","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","push","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","this","len","momentProperties","updateInProgress","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","args","slice","join","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","indexOf","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","setMonth","dayOfMonth","min","getSetMonth","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","daysInYear","y","parseTwoDigitYear","parseInt","getSetYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","w","ww","M","MM","yy","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","loadLocale","oldLocale","_abbr","e","code","getSetGlobalLocale","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","result","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","getDay","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","setUTCMinutes","getUTCMinutes","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","_week","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","erasConvertYear","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","score","configFromStringAndArray","createFromInputFallback","configFromString","dayOrDate","minute","second","millisecond","configFromObject","configFromInput","isUTC","add","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","chunk","parts","matches","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","isString","String","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","matchEraAbbr","erasAbbrRegex","computeErasParse","abbrPieces","namePieces","narrowPieces","eras","narrow","_erasRegex","_erasNameRegex","_erasAbbrRegex","_erasNarrowRegex","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","erasNameRegex","erasNarrowRegex","erasParse","_eraYearOrdinalRegex","eraYearOrdinalParse","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetMillisecond","getSetSecond","parseMs","proto","preParsePostFormat","time","formats","arrayTest","dataTypeTest","filter","item","isNumberOrStringArray","property","objectTest","propertyTest","properties","isMomentInputObject","isCalendarSpec","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","prefix","suffix","zone","isLocal","Symbol","for","toJSON","unix","creationData","eraName","since","until","eraNarrow","eraAbbr","eraYear","dir","isoWeeks","weekInfo","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","array1","array2","dontConvert","lengthDiff","diffs","compareArrays","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","tok","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","_eras","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","monthsFromDays","argWithSuffix","argThresholds","withSuffix","th","assign","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","baseIsEqual","__webpack_require__","Stack","equalArrays","equalByTag","equalObjects","getTag","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","object","bitmask","customizer","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","__data__","size","assocIndexOf","splice","pop","ListCache","has","Map","MapCache","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","coreJsData","maskSrcKey","uid","IE_PROTO","Hash","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","clear","entry","nativeCreate","HASH_UNDEFINED","getMapData","type","setCacheAdd","setCacheHas","SetCache","predicate","cache","Uint8Array","eq","mapToArray","setToArray","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","convert","isPartial","stacked","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","baseGetTag","isObjectLike","isLength","typedArrayTags","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","inverse","bool","color","body","outline","className","cssModule","innerRef","oneOfType","Card","Tag","attributes","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","freeSelf","self","root","baseIsNative","getValue","webpackPolyfill","paths","children","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","target","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","error","getCurrentDatasets","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","current","point","pid","otherProps","rest","update","_props2","node","destroy","render","_props3","id","onClick","Component","isRequired","arrayOf","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","delta","reverseKeywords","JSON","stringify","z","xyz","t1","t2","t3","hi","f","p","q","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","pair","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","scale","num","str","Color","valid","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","spaces","maxes","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","parse","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","common","steps","UNITS","sorter","arrayUnique","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","adapter","_adapter","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","majorTicksEnabled","first","determineStepSize","scale_time","adapters","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray"],"mappings":"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","file":"static/js/3.5fc01c8e.chunk.js","sourcesContent":["//! moment.js\n//! version : 2.25.3\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (hasOwnProp(obj, k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidEra: null,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      era: null,\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this),\n          len = t.length >>> 0,\n          i;\n\n      for (i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m),\n          parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      }),\n          isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [],\n      updateInProgress = false;\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  } // Moment prototype object\n\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [],\n            arg,\n            i,\n            key;\n\n        for (i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (key in arguments[0]) {\n              if (hasOwnProp(arguments[0], key)) {\n                arg += key + ': ' + arguments[0][key] + ', ';\n              }\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      if (hasOwnProp(config, i)) {\n        prop = config[i];\n\n        if (isFunction(prop)) {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n      localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n      formatFunctions = {},\n      formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {\n      if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {\n        return tok.slice(1);\n      }\n\n      return tok;\n    }).join('');\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d',\n      defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    w: 'a week',\n    ww: '%d weeks',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [],\n        u;\n\n    for (u in unitsObj) {\n      if (hasOwnProp(unitsObj, u)) {\n        units.push({\n          unit: u,\n          priority: priorities[u]\n        });\n      }\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        value = toInt(value);\n\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units),\n          i;\n\n      for (i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  var match1 = /\\d/,\n      //       0 - 9\n  match2 = /\\d\\d/,\n      //      00 - 99\n  match3 = /\\d{3}/,\n      //     000 - 999\n  match4 = /\\d{4}/,\n      //    0000 - 9999\n  match6 = /[+-]?\\d{6}/,\n      // -999999 - 999999\n  match1to2 = /\\d\\d?/,\n      //       0 - 99\n  match3to4 = /\\d\\d\\d\\d?/,\n      //     999 - 9999\n  match5to6 = /\\d\\d\\d\\d\\d\\d?/,\n      //   99999 - 999999\n  match1to3 = /\\d{1,3}/,\n      //       0 - 999\n  match1to4 = /\\d{1,4}/,\n      //       0 - 9999\n  match1to6 = /[+-]?\\d{1,6}/,\n      // -999999 - 999999\n  matchUnsigned = /\\d+/,\n      //       0 - inf\n  matchSigned = /[+-]?\\d+/,\n      //    -inf - inf\n  matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi,\n      // +00:00 -00:00 +0000 -0000 or Z\n  matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n      // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n  matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/,\n      // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n  matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n      regexes;\n  regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0,\n      MONTH = 1,\n      DATE = 2,\n      HOUR = 3,\n      MINUTE = 4,\n      SECOND = 5,\n      MILLISECOND = 6,\n      WEEK = 7,\n      WEEKDAY = 8;\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n      defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n      MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n      defaultMonthsShortRegex = matchWord,\n      defaultMonthsRegex = matchWord;\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date, args; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n      defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n      defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n      defaultWeekdaysRegex = matchWord,\n      defaultWeekdaysShortRegex = matchWord,\n      defaultWeekdaysMinRegex = matchWord;\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = regexEscape(this.weekdaysMin(mom, ''));\n      shortp = regexEscape(this.weekdaysShort(mom, ''));\n      longp = regexEscape(this.weekdays(mom, ''));\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n        pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n        pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n      // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n  getSetHour = makeGetSet('Hours', true);\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }\n\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {},\n      localeFamilies = {},\n      globalLocale;\n\n  function commonPrefix(arr1, arr2) {\n    var i,\n        minl = Math.min(arr1.length, arr2.length);\n\n    for (i = 0; i < minl; i += 1) {\n      if (arr1[i] !== arr2[i]) {\n        return i;\n      }\n    }\n\n    return minl;\n  }\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null,\n        aliasedRequire; // TODO: Find a better way to register and load all the locales in Node\n\n    if (locales[name] === undefined && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {\n        // mark as not found to avoid repeating expensive file require call causing high CPU\n        // when trying to find en-US, en_US, en-us for every format call\n        locales[name] = null; // null means not found\n      }\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig;\n\n      if (locales[name] != null && locales[name].parentLocale != null) {\n        // Update existing child locale in-place to avoid memory-leaks\n        locales[name].set(mergeConfigs(locales[name]._config, config));\n      } else {\n        // MERGE\n        tmpLocale = loadLocale(name);\n\n        if (tmpLocale != null) {\n          parentConfig = tmpLocale._config;\n        }\n\n        config = mergeConfigs(parentConfig, config);\n\n        if (tmpLocale == null) {\n          // updateLocale is called for creating a new locale\n          // Set abbr so it will have a name (getters return\n          // undefined otherwise).\n          config.abbr = name;\n        }\n\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n      } // backwards compat for now: also set the locale\n\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n\n          if (name === getSetGlobalLocale()) {\n            getSetGlobalLocale(name);\n          }\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow,\n        a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n      basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n      tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n      isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/], ['YYYYMM', /\\d{6}/, false], ['YYYY', /\\d{4}/, false]],\n      // iso time formats and regexes\n  isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]],\n      aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n      // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n  rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n      obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  }; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10),\n          m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i)),\n        parsedArray;\n\n    if (match) {\n      parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    if (config._strict) {\n      config._isValid = false;\n    } else {\n      // Final attempt, use Input Fallback\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // Pick the first defined of two or three arguments.\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // constant that refers to the ISO standard\n\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0,\n        era;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem); // handle era\n\n    era = getParsingFlags(config).era;\n\n    if (era !== null) {\n      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n    }\n\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n        scoreToBeat,\n        i,\n        currentScore,\n        validFormatFound,\n        bestFormatIsValid = false;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      validFormatFound = false;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (isValid(tempConfig)) {\n        validFormatFound = true;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (!bestFormatIsValid) {\n        if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n\n          if (validFormatFound) {\n            bestFormatIsValid = true;\n          }\n        }\n      } else {\n        if (currentScore < scoreToBeat) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n        }\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i),\n        dayOrDate = i.day === undefined ? i.date : i.day;\n    config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (format === true || format === false) {\n      strict = format;\n      format = undefined;\n    }\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }),\n      prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    var key,\n        unitHasDecimal = false,\n        i;\n\n    for (key in m) {\n      if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    for (i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset(),\n          sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher),\n        chunk,\n        parts,\n        minutes;\n\n    if (matches === null) {\n      return null;\n    }\n\n    chunk = matches[matches.length - 1] || [];\n    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset());\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {},\n        other;\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n      // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n  isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input) || !isNaN(+input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = +input;\n      } else {\n        duration.milliseconds = +input;\n      }\n    } else if (match = aspNetRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (match = isoRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n      ret._isValid = input._isValid;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add'),\n      subtract = createAdder(-1, 'subtract');\n\n  function isString(input) {\n    return typeof input === 'string' || input instanceof String;\n  } // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n\n\n  function isMomentInput(input) {\n    return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;\n  }\n\n  function isMomentInputObject(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n        propertyTest = false,\n        properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],\n        i,\n        property;\n\n    for (i = 0; i < properties.length; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n\n    return objectTest && propertyTest;\n  }\n\n  function isNumberOrStringArray(input) {\n    var arrayTest = isArray(input),\n        dataTypeTest = false;\n\n    if (arrayTest) {\n      dataTypeTest = input.filter(function (item) {\n        return !isNumber(item) && isString(input);\n      }).length === 0;\n    }\n\n    return arrayTest && dataTypeTest;\n  }\n\n  function isCalendarSpec(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n        propertyTest = false,\n        properties = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse'],\n        i,\n        property;\n\n    for (i = 0; i < properties.length; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n\n    return objectTest && propertyTest;\n  }\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // Support for single parameter, formats only overload to the calendar function\n    if (arguments.length === 1) {\n      if (isMomentInput(arguments[0])) {\n        time = arguments[0];\n        formats = undefined;\n      } else if (isCalendarSpec(arguments[0])) {\n        formats = arguments[0];\n        time = undefined;\n      }\n    } // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\n\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse',\n        output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    if (a.date() < b.date()) {\n      // end-of-month calculations work correct when the start month has more\n      // days than the end month.\n      return -monthDiff(b, a);\n    } // difference in months\n\n\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true,\n        m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment',\n        zone = '',\n        prefix,\n        year,\n        datetime,\n        suffix;\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    prefix = '[' + func + '(\"]';\n    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000,\n      MS_PER_MINUTE = 60 * MS_PER_SECOND,\n      MS_PER_HOUR = 60 * MS_PER_MINUTE,\n      MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  }\n\n  addFormatToken('N', 0, 0, 'eraAbbr');\n  addFormatToken('NN', 0, 0, 'eraAbbr');\n  addFormatToken('NNN', 0, 0, 'eraAbbr');\n  addFormatToken('NNNN', 0, 0, 'eraName');\n  addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n  addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n  addFormatToken('y', ['yy', 2], 0, 'eraYear');\n  addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n  addRegexToken('N', matchEraAbbr);\n  addRegexToken('NN', matchEraAbbr);\n  addRegexToken('NNN', matchEraAbbr);\n  addRegexToken('NNNN', matchEraName);\n  addRegexToken('NNNNN', matchEraNarrow);\n  addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {\n    var era = config._locale.erasParse(input, token, config._strict);\n\n    if (era) {\n      getParsingFlags(config).era = era;\n    } else {\n      getParsingFlags(config).invalidEra = input;\n    }\n  });\n  addRegexToken('y', matchUnsigned);\n  addRegexToken('yy', matchUnsigned);\n  addRegexToken('yyy', matchUnsigned);\n  addRegexToken('yyyy', matchUnsigned);\n  addRegexToken('yo', matchEraYearOrdinal);\n  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n  addParseToken(['yo'], function (input, array, config, token) {\n    var match;\n\n    if (config._locale._eraYearOrdinalRegex) {\n      match = input.match(config._locale._eraYearOrdinalRegex);\n    }\n\n    if (config._locale.eraYearOrdinalParse) {\n      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n    } else {\n      array[YEAR] = parseInt(input, 10);\n    }\n  });\n\n  function localeEras(m, format) {\n    var i,\n        l,\n        date,\n        eras = this._eras || getLocale('en')._eras;\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      switch (typeof eras[i].since) {\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].since).startOf('day');\n          eras[i].since = date.valueOf();\n          break;\n      }\n\n      switch (typeof eras[i].until) {\n        case 'undefined':\n          eras[i].until = +Infinity;\n          break;\n\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].until).startOf('day').valueOf();\n          eras[i].until = date.valueOf();\n          break;\n      }\n    }\n\n    return eras;\n  }\n\n  function localeErasParse(eraName, format, strict) {\n    var i,\n        l,\n        eras = this.eras(),\n        name,\n        abbr,\n        narrow;\n    eraName = eraName.toUpperCase();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      name = eras[i].name.toUpperCase();\n      abbr = eras[i].abbr.toUpperCase();\n      narrow = eras[i].narrow.toUpperCase();\n\n      if (strict) {\n        switch (format) {\n          case 'N':\n          case 'NN':\n          case 'NNN':\n            if (abbr === eraName) {\n              return eras[i];\n            }\n\n            break;\n\n          case 'NNNN':\n            if (name === eraName) {\n              return eras[i];\n            }\n\n            break;\n\n          case 'NNNNN':\n            if (narrow === eraName) {\n              return eras[i];\n            }\n\n            break;\n        }\n      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n        return eras[i];\n      }\n    }\n  }\n\n  function localeErasConvertYear(era, year) {\n    var dir = era.since <= era.until ? +1 : -1;\n\n    if (year === undefined) {\n      return hooks(era.since).year();\n    } else {\n      return hooks(era.since).year() + (year - era.offset) * dir;\n    }\n  }\n\n  function getEraName() {\n    var i,\n        l,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].name;\n      }\n\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].name;\n      }\n    }\n\n    return '';\n  }\n\n  function getEraNarrow() {\n    var i,\n        l,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].narrow;\n      }\n\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].narrow;\n      }\n    }\n\n    return '';\n  }\n\n  function getEraAbbr() {\n    var i,\n        l,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].abbr;\n      }\n\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].abbr;\n      }\n    }\n\n    return '';\n  }\n\n  function getEraYear() {\n    var i,\n        l,\n        dir,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      dir = eras[i].since <= eras[i].until ? +1 : -1; // truncate time\n\n      val = this.startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {\n        return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;\n      }\n    }\n\n    return this.year();\n  }\n\n  function erasNameRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNameRegex')) {\n      computeErasParse.call(this);\n    }\n\n    return isStrict ? this._erasNameRegex : this._erasRegex;\n  }\n\n  function erasAbbrRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasAbbrRegex')) {\n      computeErasParse.call(this);\n    }\n\n    return isStrict ? this._erasAbbrRegex : this._erasRegex;\n  }\n\n  function erasNarrowRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNarrowRegex')) {\n      computeErasParse.call(this);\n    }\n\n    return isStrict ? this._erasNarrowRegex : this._erasRegex;\n  }\n\n  function matchEraAbbr(isStrict, locale) {\n    return locale.erasAbbrRegex(isStrict);\n  }\n\n  function matchEraName(isStrict, locale) {\n    return locale.erasNameRegex(isStrict);\n  }\n\n  function matchEraNarrow(isStrict, locale) {\n    return locale.erasNarrowRegex(isStrict);\n  }\n\n  function matchEraYearOrdinal(isStrict, locale) {\n    return locale._eraYearOrdinalRegex || matchUnsigned;\n  }\n\n  function computeErasParse() {\n    var abbrPieces = [],\n        namePieces = [],\n        narrowPieces = [],\n        mixedPieces = [],\n        i,\n        l,\n        eras = this.eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      namePieces.push(regexEscape(eras[i].name));\n      abbrPieces.push(regexEscape(eras[i].abbr));\n      narrowPieces.push(regexEscape(eras[i].narrow));\n      mixedPieces.push(regexEscape(eras[i].name));\n      mixedPieces.push(regexEscape(eras[i].abbr));\n      mixedPieces.push(regexEscape(eras[i].narrow));\n    }\n\n    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n    this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getISOWeeksInISOWeekYear() {\n    return weeksInYear(this.isoWeekYear(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getWeeksInWeekYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token, getSetMillisecond;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n\n  getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n\n  if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n      return 'Moment<' + this.format() + '>';\n    };\n  }\n\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.eraName = getEraName;\n  proto.eraNarrow = getEraNarrow;\n  proto.eraAbbr = getEraAbbr;\n  proto.eraYear = getEraYear;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.weeksInWeekYear = getWeeksInWeekYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.eras = localeEras;\n  proto$1.erasParse = localeErasParse;\n  proto$1.erasConvertYear = localeErasConvertYear;\n  proto$1.erasAbbrRegex = erasAbbrRegex;\n  proto$1.erasNameRegex = erasNameRegex;\n  proto$1.erasNarrowRegex = erasNarrowRegex;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale(),\n        utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i,\n        out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0,\n        i,\n        out = [];\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    eras: [{\n      since: '0001-01-01',\n      until: +Infinity,\n      offset: 1,\n      name: 'Anno Domini',\n      narrow: 'AD',\n      abbr: 'AD'\n    }, {\n      since: '0000-12-31',\n      until: -Infinity,\n      offset: 1,\n      name: 'Before Christ',\n      narrow: 'BC',\n      abbr: 'BC'\n    }],\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds,\n        days = this._days,\n        months = this._months,\n        data = this._data,\n        seconds,\n        minutes,\n        hours,\n        years,\n        monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days,\n        months,\n        milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms'),\n      asSeconds = makeAs('s'),\n      asMinutes = makeAs('m'),\n      asHours = makeAs('h'),\n      asDays = makeAs('d'),\n      asWeeks = makeAs('w'),\n      asMonths = makeAs('M'),\n      asQuarters = makeAs('Q'),\n      asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds'),\n      seconds = makeGetter('seconds'),\n      minutes = makeGetter('minutes'),\n      hours = makeGetter('hours'),\n      days = makeGetter('days'),\n      months = makeGetter('months'),\n      years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round,\n      thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month/week\n    w: null,\n    // weeks to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n    var duration = createDuration(posNegDuration).abs(),\n        seconds = round(duration.as('s')),\n        minutes = round(duration.as('m')),\n        hours = round(duration.as('h')),\n        days = round(duration.as('d')),\n        months = round(duration.as('M')),\n        weeks = round(duration.as('w')),\n        years = round(duration.as('y')),\n        a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days];\n\n    if (thresholds.w != null) {\n      a = a || weeks <= 1 && ['w'] || weeks < thresholds.w && ['ww', weeks];\n    }\n\n    a = a || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(argWithSuffix, argThresholds) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var withSuffix = false,\n        th = thresholds,\n        locale,\n        output;\n\n    if (typeof argWithSuffix === 'object') {\n      argThresholds = argWithSuffix;\n      argWithSuffix = false;\n    }\n\n    if (typeof argWithSuffix === 'boolean') {\n      withSuffix = argWithSuffix;\n    }\n\n    if (typeof argThresholds === 'object') {\n      th = Object.assign({}, thresholds, argThresholds);\n\n      if (argThresholds.s != null && argThresholds.ss == null) {\n        th.ss = argThresholds.s - 1;\n      }\n    }\n\n    locale = this.localeData();\n    output = relativeTime$1(this, !withSuffix, th, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000,\n        days = abs$1(this._days),\n        months = abs$1(this._months),\n        minutes,\n        hours,\n        years,\n        s,\n        total = this.asSeconds(),\n        totalSign,\n        ymSign,\n        daysSign,\n        hmsSign;\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    } // 3600 seconds -> 60 minutes -> 1 hour\n\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    totalSign = total < 0 ? '-' : '';\n    ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (years ? ymSign + years + 'Y' : '') + (months ? ymSign + months + 'M' : '') + (days ? daysSign + days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hmsSign + hours + 'H' : '') + (minutes ? hmsSign + minutes + 'M' : '') + (seconds ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); //! moment.js\n\n  hooks.version = '2.25.3';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;"],"sourceRoot":""}